/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package musicfromtextfinalproject;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.Map;
import java.util.Random;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.Timer;
import net.zemberek.erisim.Zemberek;
import net.zemberek.tr.yapi.TurkiyeTurkcesi;
import net.zemberek.yapi.Kelime;
import opennlp.tools.sentdetect.SentenceDetectorME;
import opennlp.tools.sentdetect.SentenceModel;

/**
 *
 * @author Yasir KILIC
 */
public class Text2Music extends javax.swing.JFrame {

    /**
     * Creates new form Text2Music
     */
    //JFUGUE variables
    
    //String CmajScale="C D E F G A B C";
    //String CminScale="C D Eb F G Ab Bb";
    String path=null;
    int is=0;
    
    public static String CmajScale="C D E F G A B C";
    public static String CminScale="C D Eb F G Ab Bb";
    
    // Specific Notes
    String D_maj_cosku="Dh Eh F#q Gh Ah Bh C#q D |";
    String E_maj_mutluluk="Eh F#h G#q Ah Bh C#h D#q E |";
    String D_min_uzun="Dh Eq Fh Gh Aq Bbh Ch D |";
    String D_diyez_min="D#h Fq F#h G#h A#q Bh C#h D# |";
    String C_min_duygusal="Ch Dq Ebh Fh Gq Abh Bbh C |";
    
    String emotions[]={"cosku","mutluluk","hüzünlü","korku","duygusal"};
    int Tempos[]={200,180,70,50,60};
    String emotionScales[]={ "Dh Eh F#q Gh Ah Bh C#q D |","Eh F#h G#q Ah Bh C#h D#q E |","Dh Eq Fh Gh Aq Bbh Ch D |",
        "D#h Fq F#h G#h A#q Bh C#h D# |","Ch Dq Ebh Fh Gq Abh Bbh C |"};
 
    ////////////////////////////////
    
     public Map<String,Double> results;
     public String textNorm = null;
    public static  Map<String,Double> cosku=new TreeMap<String,Double>();
    public static  Map<String,Double> mutluluk=new TreeMap<String,Double>();
     public static  Map<String,Double> hüzünlü=new TreeMap<String,Double>();
      public static  Map<String,Double> duygusal=new TreeMap<String,Double>();
       public static  Map<String,Double> korku=new TreeMap<String,Double>();
       
       public static String[] Gdokuman=null;
       public static int Gindex=0,kelimeSayisi=0;
       
      public static Zemberek  zemberek=new Zemberek(new TurkiyeTurkcesi());
        public static  JProgressBar jp;
        public static  double işlenen=0.0;
          public static  Timer t;
        
        
        public Text2Music() throws UnsupportedEncodingException, IOException {
        MapInitialize();
        initComponents();
        //this.setSize(700, 355);
        jTextArea1.setLineWrap(true);
        jTextArea1.setFont(new Font("Times New Roman", 0, 25));
        jTextArea2.setBackground(Color.black);
        jTextArea2.setForeground(Color.white);
        jButton5.setEnabled(false);
        jButton4.setEnabled(false);
        jButton1.setEnabled(false);
        this.setTitle("Text2Music");
       //ate JOptionPane.showMessageDialog(rootPane, "Ön yükleme başlıyor...");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicfromtextfinalproject/11055980.png"))); // NOI18N
        jButton1.setInheritsPopupMenu(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Girilen Metin");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicfromtextfinalproject/LH2-Shutdown-icon.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicfromtextfinalproject/upload_2-128.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicfromtextfinalproject/nex.png"))); // NOI18N
        jButton4.setMinimumSize(new java.awt.Dimension(5, 5));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(java.awt.Color.red);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicfromtextfinalproject/pr.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(204, 204, 204)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("empty-statement")
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:        
        
        String par=jTextArea1.getText().trim();
       
        if(par.length()==0 || par==null)
        {
            JOptionPane.showMessageDialog(rootPane, "Lütfen Metin giriniz...");
        }
        
        else
        {            
                // Bu aşamada girilen text paragraflara ayrılacaktır.
                // Her parağraf max 10 cümleden oluşmaktadır.

            /*String par[] = null;
            try {
            par = getParags(text);
            } catch (IOException ex) {
            Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            Thread[] threadArray=new Thread[par.length];*/
         
              par=temizle(par);
              //System.out.println(par);
            
            kelimeSayisi= par.split(" ").length;
            //System.out.println(toplam);
            
            
             
             
          try {
                textNorm = Normalize(par);
               
            } catch (IOException ex) {
                Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
            }
            
             
          // Timer JprogressBar kısmı
           /* t=new Timer(50, new ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        
                        jp.setValue((int) (işlenen/toplam)*100);
                        // System.out.println((işlenen/toplam)*100);
                    }
                });
                
                t.start();
               this.add(jp);
               this.pack();*/
      
       //String message=EmotionResults(textNorm); 
               /*Thread t2=new Thread(new Runnable() {

                  @Override
                  public void run() {
                     results=EmotionResults(textNorm);
                      try {
                          Thread.sleep(1);
                          //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                      } catch (InterruptedException ex) {
                          Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
                      }
                  }
              });
               t2.start();*/
               results=EmotionResults(textNorm);
               String sonuclar=PrintResultData(results);
               jTextArea2.append("\n"+(Gindex+1)+". Paragrafin Sonuclari:\n\n"+sonuclar);
               jLabel3.setText((Gindex+1)+". Paragraf");
               // Bu kısımda JFUGUE music prgramming 
               /*Player player=new Player();
               int tempo=0,oktav_value=0;
              Double polarity=( (results.get("mutluluk")+results.get("cosku"))-(results.get("hüzünlü")+results.get("korku")+results.get("duygusal")) );
              // [-100,100] arası değer alır. 
               
              System.out.println("Polarity:"+polarity);
               
              tempo=mappingValue(polarity, -100, +100, 45, 220);
              oktav_value=mappingValue(polarity,-100, +100, 2, 6);// 2-6 arasına oktav değerleri maplenir.
              
              String pattString=polarity>0 ? ""+CmajScale:""+CminScale;
              
              pattString+=pattString;
              
              org.jfugue.pattern.Pattern p=new org.jfugue.pattern.Pattern(pattString);
              
             if(polarity>0)
              player.play(p.setTempo(tempo).setInstrument("Piano"));
             // else player.play(p.setTempo(tempo).setInstrument("Flute"));
              */
               /*Double maxIntensity=0.0;
               //List<Double> list=new LinkedList<Double>();
               boolean a=true;
               for (String emotion : emotions) {
               if (results.get(emotion) > maxIntensity)
               {
               maxIntensity = results.get(emotion);
               }
               }*/
                  
               // Bu kısımda JFUGUE music prgramming 
              
              int tempo=0,oktav_value=0;
              Double polarity=( (results.get("mutluluk")+results.get("cosku"))-(results.get("hüzünlü")+results.get("korku")) );
              // [-100,100] arası değer alır. 
               
              //System.out.println("\nPolarity:"+polarity);
               
              tempo=mappingValue(polarity, -100, +100, 45, 220);
              oktav_value=mappingValue(polarity,-100, +100, 2, 6);// 2-6 arasına oktav değerleri maplenir.
              String patt=MusicGenerate(results, tempo, kelimeSayisi, oktav_value);
              //String pattString=polarity>0 ? ""+CmajScale:""+CminScale;
              /*String pattString="";
              
              if(results.get(emotions[0])==maxIntensity) pattString=D_maj_cosku;
              else if(results.get(emotions[1])==maxIntensity) pattString=E_maj_mutluluk;
              else if(results.get(emotions[2])==maxIntensity) pattString=D_min_huzun;
              else if(results.get(emotions[3])==maxIntensity) pattString=D_diyez_min;
              else if(results.get(emotions[4])==maxIntensity) pattString=C_min_duygusal;
              else  System.out.println("Hata var. Kontrol et..");
              
              org.jfugue.pattern.Pattern p=new org.jfugue.pattern.Pattern(pattString);
              String pard[]={par};
              String pttd[]={pattString};
              int temd[]={tempo};*/
              /*
              long tidkontrol=-5;
              
              if(a){
              Thread t1=new Thread(new MusicPlayThread(pard,pttd,temd));
              t1.start();
              a=!a;
              }*/
              
              MusicPlayThread t = null;
               //     boolean check=t.get();
              //if(check)System.out.println("yes");
              //System.out.println(Thread.currentThread().getStackTrace());
              //System.out.println("state : "+t.getState());
              //boolean check=t.getComp();
              //while(Thread.currentThread().isDaemon()){
               // if(Thread.currentThread().isDaemon())System.out.println("yasiyor");
              //}
              
              //System.out.println(t.getComp());
              //if(!t.getComp())
              //System.out.println("girdi");
              /*System.out.println(t.get()+"");
              while(t.get()!=0){}
              System.out.println(t.get()+"cikis");*///stackoverflowdan bak cozum var !!!!!!
              Thread t1=new Thread(new MusicPlayThread(patt));
              t1.start();
              jTextArea2.append("\nMuzik Caliyor\n");
             
         
            
           
        
        }
        
      
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /*public boolean createThread(String[] par,String[] pttd,int[] temd){
    MusicPlayThread mpt=null;
    Thread thr=new Thread(new MusicPlayThread(par, pttd, temd));
    //thr.notifyAll();
    return true;
    }*/
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       // JOptionPane.showMessageDialog(rootPane, "Stop ");
        System.exit(0);
        
        
    }//GEN-LAST:event_jButton2ActionPerformed
    private void imageSet(String imgpath) throws FileNotFoundException{
    BufferedImage im=null;
        try {
            im = ImageIO.read(new File(imgpath));
        } catch (IOException ex) {
            Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
        }
        ImageIcon a =new ImageIcon(fitim(im, jLabel2.getWidth(), jLabel2.getHeight()));
        //getContentPane().add(new JLabel(new ImageIcon("magara.jpg")));
        //panel2.add((PopupMenu)(Object)new ImageIcon("magara.jpg"));
        jLabel2.setIcon(a);
    }
    private Image fitim(Image img,int w,int h){
        BufferedImage resimage=new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2=resimage.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(img, 0, 0, w,h,null);
        g2.dispose();
        return resimage;
    }
        
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.showOpenDialog(null);
        File file = fileChooser.getSelectedFile();
        try {
            imageSet(file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(".")+1)+"jpg");
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(file.getAbsolutePath().substring(file.getAbsolutePath().length()-3,file.getAbsolutePath().length()).equals("txt")){
            jLabel1.setText(file.getAbsolutePath().substring(file.getAbsolutePath().lastIndexOf("\\")+1));
            BufferedReader br;
            try {
                br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(file.getAbsolutePath())),"ISO-8859-9"));
            
            String line,dokuman = "";
            
            while((line=br.readLine())!=null){
                dokuman+=line;
            }
            //jTextArea1.setText(dokuman);
            Gdokuman=getParags(dokuman);
            jTextArea1.setText(Gdokuman[Gindex]);
            jLabel3.setText("1. paragraf");
            jTextArea2.append("Dosya secimi yapildi\n");
            jTextArea2.append("\n1. Paragraf gosteriliyor\n");
            jButton1.setEnabled(true);
            jButton4.setEnabled(true);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
                jTextArea2.append("Dosya secimi hatasi\n");
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
                jTextArea2.append("Dosya secimi hatasi\n");
            } catch (IOException ex) {
                Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
                jTextArea2.append("Dosya secimi hatasi\n");
            }
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        
        if(Gdokuman.length>Gindex+1)
        {
            Gindex++;
            if(Gindex>=Gdokuman.length-1)jButton4.setEnabled(false);
            jButton5.setEnabled(true);
            jTextArea2.append("\n"+(Gindex+1)+". Paragraf gosteriliyor\n");
            jLabel3.setText(Gindex+1+". paragraf");
            jTextArea1.setText(Gdokuman[Gindex]);
        }
        else{
        jButton4.setEnabled(false);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(Gindex>0)
        {
            Gindex--;
            if(Gindex<=0)jButton5.setEnabled(false);
            jButton4.setEnabled(true);
            jTextArea2.append("\n"+(Gindex+1)+". Paragraf gosteriliyor\n");
            jLabel3.setText(Gindex+1+". paragraf");
            jTextArea1.setText(Gdokuman[Gindex]);
        }
        else{
        jButton5.setEnabled(false);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Text2Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Text2Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Text2Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Text2Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Text2Music().setVisible(true);
                    
                } catch (IOException ex) {
                    Logger.getLogger(Text2Music.class.getName()).log(Level.SEVERE, null, ex);
                }
              
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

    
    
    
    
    
    private static String temizle(String text) {
        
        if(text==null) return "";
                 
          else   return text.replaceAll("[^0-9a-zA-zğşıçüöĞÖŞÇÜİ\\=]"," ").replaceAll("\\s+"," ").replace("\\"," ").trim();

    }

    private void MapInitialize() throws FileNotFoundException, UnsupportedEncodingException, IOException {
         //String sınıflar[]={"cosku_temsil","duygusal_temsil","hüzünlü_temsil","korku_temsil","mutluluk_temsil"};
         
         // File tf_idf_file=new File("C:\\Users\\Yasir KILIC\\Desktop\\TF_IDFsonOlasılık.txt");
          File tf_idf_file=new File("TF-IDF_update2.txt");
          if(tf_idf_file.canRead())
          {
          FileInputStream fıs=new FileInputStream(tf_idf_file);
                InputStreamReader isr=new InputStreamReader(fıs, "ISO-8859-9");
                BufferedReader buffer=new BufferedReader(isr);
                
           String line=buffer.readLine();
           
           while(line!=null)
           {    
                line=line.trim();
                String attribs[]=line.split("#");
                
                
                if(attribs.length==3)
                {
                  switch(attribs[0].trim())
                  {
                      case "cosku":
                          cosku.put(attribs[1].trim(), Double.parseDouble(attribs[2]));
                          // System.out.println(attribs[1].trim()+ Double.parseDouble(attribs[2]));
                          break;
                          
                          
                          
                      case "duygusal":
                          duygusal.put(attribs[1].trim(), Double.parseDouble(attribs[2]));
                           //System.out.println(attribs[1].trim()+ Double.parseDouble(attribs[2]));
                          break;
                           
                      case "huzunlu":
                          hüzünlü.put(attribs[1].trim(), Double.parseDouble(attribs[2]));
                          // System.out.println(attribs[1].trim()+ Double.parseDouble(attribs[2]));
                          break;
                          
                      case "korku":
                           korku.put(attribs[1].trim(), Double.parseDouble(attribs[2]));
                          // System.out.println(attribs[1].trim()+ Double.parseDouble(attribs[2]));
                          break;
                          
                          
                      case "mutluluk":
                           mutluluk.put(attribs[1].trim(), Double.parseDouble(attribs[2]));
                          // System.out.println(attribs[1].trim()+ Double.parseDouble(attribs[2]));
                          break;
           
                  }// switch durumu
            
                } // 3 ise 
                    
            line=buffer.readLine();
           }   
         
          }// dosya okunabilirse
         
    }

    private  Map<String, Double> EmotionResults(String textNorm) {
        
        Map<String,Double> results=new TreeMap<String,Double>();
        
        
          String textN=textNorm.trim();
          String attribWords[]=textN.split(" ");
          
          double cosku_res=0.0,mutluluk_res=0.0,korku_res=0.0,hüzünlü_res=0.0,duygusal_res=0.0,total=0.0;
         //double results[] = null;
          
          for(String t:attribWords)
          {
            cosku_res +=(cosku.containsKey(t)?cosku.get(t):0.0);
            mutluluk_res+=(mutluluk.containsKey(t)? mutluluk.get(t):0.0);
            korku_res+=(korku.containsKey(t)?korku.get(t):0.0);  
            hüzünlü_res+= (hüzünlü.containsKey(t)?hüzünlü.get(t):0.0  );
            duygusal_res+=(duygusal.containsKey(t)?duygusal.get(t):0.0);
       
          } //for sonu
          
          
          //Array
          String result="";
          
          total=cosku_res+mutluluk_res+korku_res+hüzünlü_res+duygusal_res+1;
          
          
          
          result+="Cosku==>%"+(cosku_res/total)*100;
          results.put("cosku", (cosku_res/total)*100);
          
          result+="\nMutluluk==>%"+(mutluluk_res/total)*100;
          results.put("mutluluk",(mutluluk_res/total)*100);
          
          result+="\nKorku==>%"+(korku_res/total)*100;
          results.put("korku",(korku_res/total)*100);
          
           result+="\nHüzünlü==>%"+(hüzünlü_res/total)*100;
           results.put("hüzünlü",(hüzünlü_res/total)*100);
           
            result+="\nDuygusal==>%"+(duygusal_res/total)*100;
            results.put("duygusal",(duygusal_res/total)*100);
          
        //System.out.println(result);
        return results;
        
        
    }
    
    public static String Normalize(String metinNorm) throws IOException{
        
        String metin=temizle(metinNorm);
        String[] kelime=metin.split(" ");
        String tamMetin="";
        for (String k : kelime) {
            String normalizeKelime=kelimeDenetle(k);
            if(normalizeKelime!=null)
                tamMetin+=normalizeKelime;
                               }
        
        return deyimKontrol(tamMetin);
    }

      public static String deyimKontrol(String metin) throws FileNotFoundException, IOException{//deyim kontrol 
           
        BufferedReader br= new BufferedReader(new InputStreamReader(new FileInputStream(new File("deyimlerTemsil2.txt"))));
        String line;
        while((line=br.readLine())!=null){
            String[] deyimAnlam=line.split("#");
            deyimAnlam[0]=temizle(deyimAnlam[0]);
            deyimAnlam[1]=temizle(deyimAnlam[1]);
            metin=metin.replaceAll(deyimAnlam[0],deyimAnlam[1]);
          
        }
        
         // System.out.println(metin);
         
        return metin;

    }
  public static String kelimeDenetle(String kelime){
      işlenen++;
        Zemberek zemberek=new Zemberek(new TurkiyeTurkcesi());
        if(!zemberek.kelimeDenetle(kelime)){
            String[] oneriler=zemberek.oner(kelime);
            if(oneriler.length>0)
            {
                kelime=oneriler[0];
            }
            
            
            else return null;
        }
        Kelime[] kel=zemberek.kelimeCozumle(kelime);
        if(kel.length>0){
            String ozellikCikarim=kel[0].toString();
            String ozellikler=ozellikCikarim.substring(ozellikCikarim.indexOf(":")+1,ozellikCikarim.indexOf("]")-1);
            ozellikler=ozellikler.replace(", ","_");
            if(ozellikCikarim.contains("OLUMSUZLUK"))
                ozellikler=ozellikler+"_OLUMSUZ";
            //if(ozellikCikarim.contains("YOKLUK")) ozellikler=ozellikler+"_YOKLUK";
            //System.out.println(ozellikler);
            return ozellikler;
        }
        return null;
    }
 public static  int mappingValue(double value,double x1,double x2,double y1,double y2)
    {
        
          double newVal=y1+ ((value-Math.min(x1, x2)) /Math.abs(x1-x2))*Math.abs(y1-y2);
          
          return  (int) Math.round(newVal);
      
    }

    private String[] getParags(String text) throws FileNotFoundException, IOException {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        InputStream is = new FileInputStream("en-sent.bin");
	SentenceModel model = new SentenceModel(is);
	SentenceDetectorME sdetector = new SentenceDetectorME(model);
        
        
         String s[]=sdetector.sentDetect(text);
         String paragraph[]=new String[(s.length/10)+1];
         
         
         
         for(int i=0;i<s.length/10;i++)
         {String temp="";
            for(int j=0;j<10;j++)
            {
              temp+=s[(10*i)+j];
            
            }
            paragraph[i]=temp;
         }
             
         paragraph[s.length/10]="";
         for(int x=0;x<s.length%10;x++)
         {
         
         paragraph[s.length/10]+=s[(s.length/10)*10+x];
         
         }
         
                
    return paragraph;
    
    }
    
    private String MusicGenerate(Map<String, Double> results,int tempo,int kSayisi,int octave) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
       double EmotionProbs[]=new double[emotions.length];
       double tempP=0;
        //Pattern tempPattern=new Pattern();
        
        String melodySeq="I[Piano]";
       
       for(int i=0;i<emotions.length;i++)
       {
          tempP+=(results.get(emotions[i]));
       EmotionProbs[i]=tempP;   
       }// end for
       Random r=new Random();
       int time =(kSayisi/36)+1;//oratalam okuma suresi saniyede 3 kelime bir scale 12 saniye oldugundan
       while(time>=0)
       {   
      
      double randomNumber=r.nextDouble()*100;
           //System.out.println(randomNumber);
      for(int i=0;i<emotions.length;i++)
      {
         if(randomNumber<EmotionProbs[i])
         {
             /*tempPattern=new Pattern(emotionScales[i]);
             tempPattern.setTempo((tempo-30)+r.nextInt(60));
             tempPattern.setInstrument("Piano");
             System.out.println(emotions[i]);
             player.play(tempPattern);*/
             melodySeq+=" "+emotionScales[i]+octave;
             melodySeq+=" T"+(tempo-30+r.nextInt(60));
             
           //player.play(emotionScales[i]);
              break;
         }
       }// end for
      
      time--;
       } // while sonu     
       return melodySeq;
    }
    
    private String PrintResultData(Map<String, Double> results) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
      String ret="";
      
      ret+="Coşku=%"+results.get("cosku")+"\n";
      ret+="Mutluluk=%"+results.get("mutluluk")+"\n";
      ret+="Korku="+results.get("korku")+"\n";
      ret+="Hüzünlü="+results.get("hüzünlü")+"\n";
      ret+="Duygusal="+results.get("duygusal")+"\n";
      
      return ret;
    }
    
    
  
    

    
}
